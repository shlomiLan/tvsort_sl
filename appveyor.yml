build: off

environment:
  matrix:
    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"
    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "32"
init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the power-shell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --disable-pip-version-check --user --upgrade pip"

  - "copy C:\\projects\\tvsort-sl\\tvsort_sl\\settings\\templates\\local.yml C:\\projects\\tvsort-sl\\tvsort_sl\\settings\\local.yml"
  - "copy C:\\projects\\tvsort-sl\\tvsort_sl\\settings\\templates\\test.yml C:\\projects\\tvsort-sl\\tvsort_sl\\settings\\test.yml"
  - "pip install virtualenv"
  - "virtualenv venv"
  - "venv\\Scripts\\activate"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -r requirements.txt"
  - "pip list"
  - "pip -V"

  - "mkdir logs"

test_script:
  - "cd tvsort_sl"
  - "coverage run -m pytest"
  - "codecov"
  - " python C:\\projects\\tvsort-sl\\tvsort_sl\\tvsort_sl.py"
